#!/bin/sh
#
# mktrampolines: build the static clang and xstatic trampolines
# by pts@fazekas.hu at Thu Dec 26 17:45:15 CET 2013
#
# Run this script on an i386 or amd64 Linux.
#
# Here is how lib0.a was created from dietlibc.a in dietlibc-0.33
#
# $ rm -f ../lib0.a &&
#   ar cr ../lib0.a strcmp.o strncmp.o stackgap.o execv.o strstr.o getenv.o \
#   open.o read.o close.o set_thread_area.o errno_location.o memcmp.o \
#   execve.o environ.o alloc.o stat.o strcpy.o strcat.o lstat.o strdup.o \
#   mmap.o munmap.o mremap.o unified.o errno.o readlink.o write.o strchr.o \
#   __guard.o exec_lib.o stack_smash_handler2.o write12.o fork.o waitpid.o \
#   unlink.o uname.o
#

set -ex

test -f dietlibc/lib0.a
test -f dietlibc/start.o
test -f dietlibc/miniinc.h
CFLAGS='-m32 -fno-stack-protector -fomit-frame-pointer -mpreferred-stack-boundary=2 -falign-functions=1 -falign-jumps=1 -falign-loops=1 -Os -W -Wall -Werror=implicit -Werror=implicit-int -Werror=implicit-function-declaration --sysroot dietlibc -isystem dietlibc -static-libgcc -DUSE_MINIINC'
LDFLAGS1='-nostdlib -m elf_i386 -static -s dietlibc/start.o'
LDFLAGS2='dietlibc/lib0.a'

gcc $CFLAGS -c xstatic.c
ld -o xstatic $LDFLAGS1 xstatic.o $LDFLAGS2
gcc $CFLAGS -c clang_trampoline.c
ld -o clang $LDFLAGS1 clang_trampoline.o $LDFLAGS2
ls -l xstatic clang

: mktrampolines OK.
